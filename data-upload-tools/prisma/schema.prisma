// Define database connection via Prisma Accelerate
datasource db {
  provider = "postgresql"
  url      = env("PRISMA_DATABASE_URL")
}

// Define Prisma Client generation
generator client {
  provider = "prisma-client-js"
}

// Data models for Pacific Sands Analytics
model User {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  email     String   @unique
  name      String?
}

model RateRecord {
  id        Int      @id @default(autoincrement())
  date      DateTime
  roomType  String   @map("room_type")
  rate      Float
  channel   String   @default("Direct")
  source    String   @default("api")
  filename  String   @default("unknown")
  metadata  Json?
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("rate_records")
}

model OccupancyRecord {
  id             Int      @id @default(autoincrement())
  date           DateTime
  roomType       String   @map("room_type")
  occupancyRate  Float    @map("occupancy_rate")
  roomsSold      Int      @default(0) @map("rooms_sold")
  roomsAvailable Int      @default(0) @map("rooms_available")
  source         String   @default("api")
  filename       String   @default("unknown")
  metadata       Json?
  createdAt      DateTime @default(now()) @map("created_at")
  updatedAt      DateTime @updatedAt @map("updated_at")

  @@map("occupancy_records")
}

model UploadMetadata {
  id               String   @id @default(cuid())
  filename         String
  dataType         String   @map("data_type")
  recordsCount     Int      @map("records_count")
  source           String   @default("csv_upload")
  uploadedAt       DateTime @default(now()) @map("uploaded_at")
  fileSize         Int?     @map("file_size")
  processingTimeMs Int?     @map("processing_time_ms")
  purpose          String?
  tags             String[] @db.Text
  links            InsightUploadLink[]

  @@map("upload_metadata")
}

model Insight {
  id            String   @id @default(cuid())
  text          String
  source        String   @default("system")
  confidence    Float    @default(0.5)
  impact        String   @default("medium") // low, medium, high
  metadata      Json?
  tags          String[] @db.Text
  sourceUrl     String?  @map("source_url")
  createdAt     DateTime @default(now()) @map("created_at")
  updatedAt     DateTime @updatedAt @map("updated_at")
  relatedUploads InsightUploadLink[]

  @@map("insights")
}

model InsightUploadLink {
  id        String   @id @default(cuid())
  insightId String
  uploadId  String
  createdAt DateTime @default(now()) @map("created_at")
  insight   Insight  @relation(fields: [insightId], references: [id], onDelete: Cascade)
  upload    UploadMetadata @relation(fields: [uploadId], references: [id], onDelete: Cascade)

  @@map("insight_upload_links")
  @@unique([insightId, uploadId])
}