generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model PaceReport {
  id            String   @id @default(cuid())
  reportDate    DateTime
  targetMonth   String
  roomType      String
  dayOfWeek     Int?
  dayName       String?
  occupancy     Float
  adr           Float
  revenue       Float
  roomsSold     Int
  roomsAvailable Int?
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  
  @@index([reportDate, targetMonth])
  @@index([roomType])
}

model OccupancyData {
  id            String   @id @default(cuid())
  snapshotDate  DateTime
  fiscalYear    String
  date          DateTime
  dayOfWeek     String?
  roomType      String?  @default("All")
  available     Int
  sold          Int
  occupancyRate Float
  adr           Float?
  revPAR        Float?
  revenue       Float?
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  
  @@unique([snapshotDate, date, roomType])
  @@index([date])
  @@index([fiscalYear])
}

model RateShop {
  id            String   @id @default(cuid())
  reportDate    DateTime
  checkInDate   DateTime
  nights        Int?     @default(1)
  property      String
  roomType      String
  ourRate       Float?
  compRate      Float?
  difference    Float?
  percentDiff   Float?
  availability  String?
  notes         String?
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  
  @@index([reportDate, checkInDate])
  @@index([property])
}

model DataImport {
  id            String   @id @default(cuid())
  fileName      String
  filePath      String?
  fileType      String
  fileSize      Int?
  recordCount   Int
  importedAt    DateTime @default(now())
  status        String
  errors        Json?
  metadata      Json?
  
  @@index([fileType, status])
}

model MonthlyMetrics {
  id            String   @id @default(cuid())
  month         DateTime
  fiscalYear    String
  avgOccupancy  Float
  avgAdr        Float
  totalRevenue  Float
  totalRoomsSold Int
  totalAvailable Int
  revPAR        Float
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  
  @@unique([month, fiscalYear])
}

model Item {
  id   Int    @id @default(autoincrement())
  name String
}

// GPT Interaction Tracking
model GPTInteraction {
  id              String   @id @default(cuid())
  timestamp       DateTime @default(now())
  interactionType String   // "query", "response", "insight_stored", "forecast_generated"
  endpoint        String   // API endpoint used
  user            String?  @default("Sandy")
  
  // Request details
  requestData     Json?    // Full request parameters
  requestSummary  String?  // Human-readable summary
  
  // Response details
  responseData    Json?    // Full response data
  responseSummary String?  // Human-readable summary
  
  // Metrics
  responseTime    Int?     // Response time in ms
  dataPoints      Int?     // Number of data points returned/processed
  confidence      Float?   // Confidence score if applicable
  
  // Categorization
  category        String?  // "analytics", "forecasting", "knowledge", "operational"
  tags            String?  // Comma-separated tags
  
  // Business impact
  businessValue   String?  // Qualitative assessment of value
  actionTaken     String?  // What action was taken based on this
  
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  
  @@index([timestamp])
  @@index([interactionType])
  @@index([category])
}

// GPT Generated Insights
model GPTInsight {
  id              String   @id @default(cuid())
  generatedAt     DateTime @default(now())
  insightType     String   // "trend", "anomaly", "recommendation", "forecast"
  
  // Content
  title           String
  content         String
  summary         String?
  
  // Context
  dataSource      String?  // Which data was analyzed
  dateRange       String?  // Period covered
  confidence      Float?   // 0-1 confidence score
  
  // Impact & Actions
  priority        String?  @default("medium") // "high", "medium", "low"
  actionable      Boolean  @default(true)
  implemented     Boolean  @default(false)
  implementedAt   DateTime?
  outcome         String?  // Result if implemented
  
  // Categorization
  category        String?  // "revenue", "occupancy", "pricing", "operations"
  tags            String?  // Comma-separated tags
  
  // Metrics
  potentialImpact String?  // Estimated impact
  actualImpact    String?  // Measured impact after implementation
  
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  
  @@index([generatedAt])
  @@index([insightType])
  @@index([priority])
  @@index([implemented])
}

// Daily GPT Usage Summary
model GPTUsageSummary {
  id              String   @id @default(cuid())
  date            DateTime @unique
  
  // Quantitative Metrics
  totalQueries    Int      @default(0)
  totalResponses  Int      @default(0)
  avgResponseTime Int?     // Average response time in ms
  
  // Endpoint usage
  analyticsQueries Int     @default(0)
  forecastQueries  Int     @default(0)
  knowledgeQueries Int     @default(0)
  insightsStored   Int     @default(0)
  
  // Data volume
  dataPointsAnalyzed Int   @default(0)
  recordsReturned    Int   @default(0)
  
  // Qualitative Metrics
  keyInsights     Json?    // Array of key insights for the day
  topQueries      Json?    // Most frequent query types
  businessValue   String?  // Daily value assessment
  
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
}
